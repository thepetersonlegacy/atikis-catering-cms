//@ts-nocheck
  // DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
  export function gql(strings: TemplateStringsArray, ...args: string[]): string {
    let str = ''
    strings.forEach((string, i) => {
      str += string + (args[i] || '')
    })
    return str
  }
  export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** References another document, used as a foreign key */
  Reference: { input: any; output: any; }
  JSON: { input: any; output: any; }
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String']['output'];
  title?: Maybe<Scalars['String']['output']>;
  basename: Scalars['String']['output'];
  hasReferences?: Maybe<Scalars['Boolean']['output']>;
  breadcrumbs: Array<Scalars['String']['output']>;
  path: Scalars['String']['output'];
  relativePath: Scalars['String']['output'];
  extension: Scalars['String']['output'];
  template: Scalars['String']['output'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']['input']>;
};

export type Folder = {
  __typename?: 'Folder';
  name: Scalars['String']['output'];
  path: Scalars['String']['output'];
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean']['output'];
  hasNextPage: Scalars['Boolean']['output'];
  startCursor: Scalars['String']['output'];
  endCursor: Scalars['String']['output'];
};

export type Node = {
  id: Scalars['ID']['output'];
};

export type Document = {
  id: Scalars['ID']['output'];
  _sys?: Maybe<SystemInfo>;
  _values: Scalars['JSON']['output'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Float']['output'];
  pageInfo: PageInfo;
};

export type Query = {
  __typename?: 'Query';
  getOptimizedQuery?: Maybe<Scalars['String']['output']>;
  collection: Collection;
  collections: Array<Collection>;
  node: Node;
  document: DocumentNode;
  siteSettings: SiteSettings;
  siteSettingsConnection: SiteSettingsConnection;
  menuItems: MenuItems;
  menuItemsConnection: MenuItemsConnection;
  testimonials: Testimonials;
  testimonialsConnection: TestimonialsConnection;
  galleryImages: GalleryImages;
  galleryImagesConnection: GalleryImagesConnection;
  translations: Translations;
  translationsConnection: TranslationsConnection;
};


export type QueryGetOptimizedQueryArgs = {
  queryString: Scalars['String']['input'];
};


export type QueryCollectionArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
};


export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']['input']>;
};


export type QueryDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QuerySiteSettingsArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QuerySiteSettingsConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<SiteSettingsFilter>;
};


export type QueryMenuItemsArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryMenuItemsConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<MenuItemsFilter>;
};


export type QueryTestimonialsArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryTestimonialsConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<TestimonialsFilter>;
};


export type QueryGalleryImagesArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryGalleryImagesConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<GalleryImagesFilter>;
};


export type QueryTranslationsArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryTranslationsConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<TranslationsFilter>;
};

export type DocumentFilter = {
  siteSettings?: InputMaybe<SiteSettingsFilter>;
  menuItems?: InputMaybe<MenuItemsFilter>;
  testimonials?: InputMaybe<TestimonialsFilter>;
  galleryImages?: InputMaybe<GalleryImagesFilter>;
  translations?: InputMaybe<TranslationsFilter>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  label?: Maybe<Scalars['String']['output']>;
  path: Scalars['String']['output'];
  format?: Maybe<Scalars['String']['output']>;
  matches?: Maybe<Scalars['String']['output']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']['output']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']['output']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<DocumentFilter>;
  folder?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentNode = SiteSettings | MenuItems | Testimonials | GalleryImages | Translations | Folder;

export type SiteSettingsContact = {
  __typename?: 'SiteSettingsContact';
  email?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  address?: Maybe<Scalars['String']['output']>;
};

export type SiteSettingsHero = {
  __typename?: 'SiteSettingsHero';
  title?: Maybe<Scalars['String']['output']>;
  subtitle?: Maybe<Scalars['String']['output']>;
  backgroundImage?: Maybe<Scalars['String']['output']>;
};

export type SiteSettings = Node & Document & {
  __typename?: 'SiteSettings';
  contact?: Maybe<SiteSettingsContact>;
  hero?: Maybe<SiteSettingsHero>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type StringFilter = {
  startsWith?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type SiteSettingsContactFilter = {
  email?: InputMaybe<StringFilter>;
  phone?: InputMaybe<StringFilter>;
  address?: InputMaybe<StringFilter>;
};

export type ImageFilter = {
  startsWith?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type SiteSettingsHeroFilter = {
  title?: InputMaybe<StringFilter>;
  subtitle?: InputMaybe<StringFilter>;
  backgroundImage?: InputMaybe<ImageFilter>;
};

export type SiteSettingsFilter = {
  contact?: InputMaybe<SiteSettingsContactFilter>;
  hero?: InputMaybe<SiteSettingsHeroFilter>;
};

export type SiteSettingsConnectionEdges = {
  __typename?: 'SiteSettingsConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<SiteSettings>;
};

export type SiteSettingsConnection = Connection & {
  __typename?: 'SiteSettingsConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<SiteSettingsConnectionEdges>>>;
};

export type MenuItems = Node & Document & {
  __typename?: 'MenuItems';
  name: Scalars['String']['output'];
  description?: Maybe<Scalars['String']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  category?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
  featured?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type NumberFilter = {
  lt?: InputMaybe<Scalars['Float']['input']>;
  lte?: InputMaybe<Scalars['Float']['input']>;
  gte?: InputMaybe<Scalars['Float']['input']>;
  gt?: InputMaybe<Scalars['Float']['input']>;
  eq?: InputMaybe<Scalars['Float']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']['input']>>>;
};

export type BooleanFilter = {
  eq?: InputMaybe<Scalars['Boolean']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
};

export type MenuItemsFilter = {
  name?: InputMaybe<StringFilter>;
  description?: InputMaybe<StringFilter>;
  price?: InputMaybe<NumberFilter>;
  category?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
  featured?: InputMaybe<BooleanFilter>;
};

export type MenuItemsConnectionEdges = {
  __typename?: 'MenuItemsConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<MenuItems>;
};

export type MenuItemsConnection = Connection & {
  __typename?: 'MenuItemsConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<MenuItemsConnectionEdges>>>;
};

export type Testimonials = Node & Document & {
  __typename?: 'Testimonials';
  name: Scalars['String']['output'];
  company?: Maybe<Scalars['String']['output']>;
  content: Scalars['String']['output'];
  rating?: Maybe<Scalars['Float']['output']>;
  avatar?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type TestimonialsFilter = {
  name?: InputMaybe<StringFilter>;
  company?: InputMaybe<StringFilter>;
  content?: InputMaybe<StringFilter>;
  rating?: InputMaybe<NumberFilter>;
  avatar?: InputMaybe<ImageFilter>;
};

export type TestimonialsConnectionEdges = {
  __typename?: 'TestimonialsConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<Testimonials>;
};

export type TestimonialsConnection = Connection & {
  __typename?: 'TestimonialsConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<TestimonialsConnectionEdges>>>;
};

export type GalleryImages = Node & Document & {
  __typename?: 'GalleryImages';
  src: Scalars['String']['output'];
  alt: Scalars['String']['output'];
  caption?: Maybe<Scalars['String']['output']>;
  album?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type GalleryImagesFilter = {
  src?: InputMaybe<ImageFilter>;
  alt?: InputMaybe<StringFilter>;
  caption?: InputMaybe<StringFilter>;
  album?: InputMaybe<StringFilter>;
};

export type GalleryImagesConnectionEdges = {
  __typename?: 'GalleryImagesConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<GalleryImages>;
};

export type GalleryImagesConnection = Connection & {
  __typename?: 'GalleryImagesConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<GalleryImagesConnectionEdges>>>;
};

export type TranslationsNav = {
  __typename?: 'TranslationsNav';
  home?: Maybe<Scalars['String']['output']>;
  menu?: Maybe<Scalars['String']['output']>;
  gallery?: Maybe<Scalars['String']['output']>;
  testimonials?: Maybe<Scalars['String']['output']>;
  contact?: Maybe<Scalars['String']['output']>;
  orderNow?: Maybe<Scalars['String']['output']>;
};

export type TranslationsHero = {
  __typename?: 'TranslationsHero';
  title?: Maybe<Scalars['String']['output']>;
  subtitle?: Maybe<Scalars['String']['output']>;
  viewMenu?: Maybe<Scalars['String']['output']>;
};

export type TranslationsFooter = {
  __typename?: 'TranslationsFooter';
  quickLinks?: Maybe<Scalars['String']['output']>;
  contactInfo?: Maybe<Scalars['String']['output']>;
  followUs?: Maybe<Scalars['String']['output']>;
};

export type Translations = Node & Document & {
  __typename?: 'Translations';
  language: Scalars['String']['output'];
  nav?: Maybe<TranslationsNav>;
  hero?: Maybe<TranslationsHero>;
  footer?: Maybe<TranslationsFooter>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type TranslationsNavFilter = {
  home?: InputMaybe<StringFilter>;
  menu?: InputMaybe<StringFilter>;
  gallery?: InputMaybe<StringFilter>;
  testimonials?: InputMaybe<StringFilter>;
  contact?: InputMaybe<StringFilter>;
  orderNow?: InputMaybe<StringFilter>;
};

export type TranslationsHeroFilter = {
  title?: InputMaybe<StringFilter>;
  subtitle?: InputMaybe<StringFilter>;
  viewMenu?: InputMaybe<StringFilter>;
};

export type TranslationsFooterFilter = {
  quickLinks?: InputMaybe<StringFilter>;
  contactInfo?: InputMaybe<StringFilter>;
  followUs?: InputMaybe<StringFilter>;
};

export type TranslationsFilter = {
  language?: InputMaybe<StringFilter>;
  nav?: InputMaybe<TranslationsNavFilter>;
  hero?: InputMaybe<TranslationsHeroFilter>;
  footer?: InputMaybe<TranslationsFooterFilter>;
};

export type TranslationsConnectionEdges = {
  __typename?: 'TranslationsConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<Translations>;
};

export type TranslationsConnection = Connection & {
  __typename?: 'TranslationsConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<TranslationsConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  deleteDocument: DocumentNode;
  createDocument: DocumentNode;
  createFolder: DocumentNode;
  updateSiteSettings: SiteSettings;
  createSiteSettings: SiteSettings;
  updateMenuItems: MenuItems;
  createMenuItems: MenuItems;
  updateTestimonials: Testimonials;
  createTestimonials: Testimonials;
  updateGalleryImages: GalleryImages;
  createGalleryImages: GalleryImages;
  updateTranslations: Translations;
  createTranslations: Translations;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String']['input'];
  relativePath: Scalars['String']['input'];
  template?: InputMaybe<Scalars['String']['input']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
  params: DocumentUpdateMutation;
};


export type MutationDeleteDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
};


export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
  params: DocumentMutation;
};


export type MutationCreateFolderArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
};


export type MutationUpdateSiteSettingsArgs = {
  relativePath: Scalars['String']['input'];
  params: SiteSettingsMutation;
};


export type MutationCreateSiteSettingsArgs = {
  relativePath: Scalars['String']['input'];
  params: SiteSettingsMutation;
};


export type MutationUpdateMenuItemsArgs = {
  relativePath: Scalars['String']['input'];
  params: MenuItemsMutation;
};


export type MutationCreateMenuItemsArgs = {
  relativePath: Scalars['String']['input'];
  params: MenuItemsMutation;
};


export type MutationUpdateTestimonialsArgs = {
  relativePath: Scalars['String']['input'];
  params: TestimonialsMutation;
};


export type MutationCreateTestimonialsArgs = {
  relativePath: Scalars['String']['input'];
  params: TestimonialsMutation;
};


export type MutationUpdateGalleryImagesArgs = {
  relativePath: Scalars['String']['input'];
  params: GalleryImagesMutation;
};


export type MutationCreateGalleryImagesArgs = {
  relativePath: Scalars['String']['input'];
  params: GalleryImagesMutation;
};


export type MutationUpdateTranslationsArgs = {
  relativePath: Scalars['String']['input'];
  params: TranslationsMutation;
};


export type MutationCreateTranslationsArgs = {
  relativePath: Scalars['String']['input'];
  params: TranslationsMutation;
};

export type DocumentUpdateMutation = {
  siteSettings?: InputMaybe<SiteSettingsMutation>;
  menuItems?: InputMaybe<MenuItemsMutation>;
  testimonials?: InputMaybe<TestimonialsMutation>;
  galleryImages?: InputMaybe<GalleryImagesMutation>;
  translations?: InputMaybe<TranslationsMutation>;
  relativePath?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentMutation = {
  siteSettings?: InputMaybe<SiteSettingsMutation>;
  menuItems?: InputMaybe<MenuItemsMutation>;
  testimonials?: InputMaybe<TestimonialsMutation>;
  galleryImages?: InputMaybe<GalleryImagesMutation>;
  translations?: InputMaybe<TranslationsMutation>;
};

export type SiteSettingsContactMutation = {
  email?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  address?: InputMaybe<Scalars['String']['input']>;
};

export type SiteSettingsHeroMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  subtitle?: InputMaybe<Scalars['String']['input']>;
  backgroundImage?: InputMaybe<Scalars['String']['input']>;
};

export type SiteSettingsMutation = {
  contact?: InputMaybe<SiteSettingsContactMutation>;
  hero?: InputMaybe<SiteSettingsHeroMutation>;
};

export type MenuItemsMutation = {
  name?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  category?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  featured?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TestimonialsMutation = {
  name?: InputMaybe<Scalars['String']['input']>;
  company?: InputMaybe<Scalars['String']['input']>;
  content?: InputMaybe<Scalars['String']['input']>;
  rating?: InputMaybe<Scalars['Float']['input']>;
  avatar?: InputMaybe<Scalars['String']['input']>;
};

export type GalleryImagesMutation = {
  src?: InputMaybe<Scalars['String']['input']>;
  alt?: InputMaybe<Scalars['String']['input']>;
  caption?: InputMaybe<Scalars['String']['input']>;
  album?: InputMaybe<Scalars['String']['input']>;
};

export type TranslationsNavMutation = {
  home?: InputMaybe<Scalars['String']['input']>;
  menu?: InputMaybe<Scalars['String']['input']>;
  gallery?: InputMaybe<Scalars['String']['input']>;
  testimonials?: InputMaybe<Scalars['String']['input']>;
  contact?: InputMaybe<Scalars['String']['input']>;
  orderNow?: InputMaybe<Scalars['String']['input']>;
};

export type TranslationsHeroMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  subtitle?: InputMaybe<Scalars['String']['input']>;
  viewMenu?: InputMaybe<Scalars['String']['input']>;
};

export type TranslationsFooterMutation = {
  quickLinks?: InputMaybe<Scalars['String']['input']>;
  contactInfo?: InputMaybe<Scalars['String']['input']>;
  followUs?: InputMaybe<Scalars['String']['input']>;
};

export type TranslationsMutation = {
  language?: InputMaybe<Scalars['String']['input']>;
  nav?: InputMaybe<TranslationsNavMutation>;
  hero?: InputMaybe<TranslationsHeroMutation>;
  footer?: InputMaybe<TranslationsFooterMutation>;
};

export type SiteSettingsPartsFragment = { __typename: 'SiteSettings', contact?: { __typename: 'SiteSettingsContact', email?: string | null, phone?: string | null, address?: string | null } | null, hero?: { __typename: 'SiteSettingsHero', title?: string | null, subtitle?: string | null, backgroundImage?: string | null } | null };

export type MenuItemsPartsFragment = { __typename: 'MenuItems', name: string, description?: string | null, price?: number | null, category?: string | null, image?: string | null, featured?: boolean | null };

export type TestimonialsPartsFragment = { __typename: 'Testimonials', name: string, company?: string | null, content: string, rating?: number | null, avatar?: string | null };

export type GalleryImagesPartsFragment = { __typename: 'GalleryImages', src: string, alt: string, caption?: string | null, album?: string | null };

export type TranslationsPartsFragment = { __typename: 'Translations', language: string, nav?: { __typename: 'TranslationsNav', home?: string | null, menu?: string | null, gallery?: string | null, testimonials?: string | null, contact?: string | null, orderNow?: string | null } | null, hero?: { __typename: 'TranslationsHero', title?: string | null, subtitle?: string | null, viewMenu?: string | null } | null, footer?: { __typename: 'TranslationsFooter', quickLinks?: string | null, contactInfo?: string | null, followUs?: string | null } | null };

export type SiteSettingsQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type SiteSettingsQuery = { __typename?: 'Query', siteSettings: { __typename: 'SiteSettings', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, contact?: { __typename: 'SiteSettingsContact', email?: string | null, phone?: string | null, address?: string | null } | null, hero?: { __typename: 'SiteSettingsHero', title?: string | null, subtitle?: string | null, backgroundImage?: string | null } | null } };

export type SiteSettingsConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<SiteSettingsFilter>;
}>;


export type SiteSettingsConnectionQuery = { __typename?: 'Query', siteSettingsConnection: { __typename?: 'SiteSettingsConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'SiteSettingsConnectionEdges', cursor: string, node?: { __typename: 'SiteSettings', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, contact?: { __typename: 'SiteSettingsContact', email?: string | null, phone?: string | null, address?: string | null } | null, hero?: { __typename: 'SiteSettingsHero', title?: string | null, subtitle?: string | null, backgroundImage?: string | null } | null } | null } | null> | null } };

export type MenuItemsQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type MenuItemsQuery = { __typename?: 'Query', menuItems: { __typename: 'MenuItems', id: string, name: string, description?: string | null, price?: number | null, category?: string | null, image?: string | null, featured?: boolean | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } };

export type MenuItemsConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<MenuItemsFilter>;
}>;


export type MenuItemsConnectionQuery = { __typename?: 'Query', menuItemsConnection: { __typename?: 'MenuItemsConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'MenuItemsConnectionEdges', cursor: string, node?: { __typename: 'MenuItems', id: string, name: string, description?: string | null, price?: number | null, category?: string | null, image?: string | null, featured?: boolean | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null } };

export type TestimonialsQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type TestimonialsQuery = { __typename?: 'Query', testimonials: { __typename: 'Testimonials', id: string, name: string, company?: string | null, content: string, rating?: number | null, avatar?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } };

export type TestimonialsConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<TestimonialsFilter>;
}>;


export type TestimonialsConnectionQuery = { __typename?: 'Query', testimonialsConnection: { __typename?: 'TestimonialsConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'TestimonialsConnectionEdges', cursor: string, node?: { __typename: 'Testimonials', id: string, name: string, company?: string | null, content: string, rating?: number | null, avatar?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null } };

export type GalleryImagesQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type GalleryImagesQuery = { __typename?: 'Query', galleryImages: { __typename: 'GalleryImages', id: string, src: string, alt: string, caption?: string | null, album?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } };

export type GalleryImagesConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<GalleryImagesFilter>;
}>;


export type GalleryImagesConnectionQuery = { __typename?: 'Query', galleryImagesConnection: { __typename?: 'GalleryImagesConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'GalleryImagesConnectionEdges', cursor: string, node?: { __typename: 'GalleryImages', id: string, src: string, alt: string, caption?: string | null, album?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null } };

export type TranslationsQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type TranslationsQuery = { __typename?: 'Query', translations: { __typename: 'Translations', id: string, language: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, nav?: { __typename: 'TranslationsNav', home?: string | null, menu?: string | null, gallery?: string | null, testimonials?: string | null, contact?: string | null, orderNow?: string | null } | null, hero?: { __typename: 'TranslationsHero', title?: string | null, subtitle?: string | null, viewMenu?: string | null } | null, footer?: { __typename: 'TranslationsFooter', quickLinks?: string | null, contactInfo?: string | null, followUs?: string | null } | null } };

export type TranslationsConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<TranslationsFilter>;
}>;


export type TranslationsConnectionQuery = { __typename?: 'Query', translationsConnection: { __typename?: 'TranslationsConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'TranslationsConnectionEdges', cursor: string, node?: { __typename: 'Translations', id: string, language: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, hasReferences?: boolean | null, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, nav?: { __typename: 'TranslationsNav', home?: string | null, menu?: string | null, gallery?: string | null, testimonials?: string | null, contact?: string | null, orderNow?: string | null } | null, hero?: { __typename: 'TranslationsHero', title?: string | null, subtitle?: string | null, viewMenu?: string | null } | null, footer?: { __typename: 'TranslationsFooter', quickLinks?: string | null, contactInfo?: string | null, followUs?: string | null } | null } | null } | null> | null } };

export const SiteSettingsPartsFragmentDoc = gql`
    fragment SiteSettingsParts on SiteSettings {
  __typename
  contact {
    __typename
    email
    phone
    address
  }
  hero {
    __typename
    title
    subtitle
    backgroundImage
  }
}
    `;
export const MenuItemsPartsFragmentDoc = gql`
    fragment MenuItemsParts on MenuItems {
  __typename
  name
  description
  price
  category
  image
  featured
}
    `;
export const TestimonialsPartsFragmentDoc = gql`
    fragment TestimonialsParts on Testimonials {
  __typename
  name
  company
  content
  rating
  avatar
}
    `;
export const GalleryImagesPartsFragmentDoc = gql`
    fragment GalleryImagesParts on GalleryImages {
  __typename
  src
  alt
  caption
  album
}
    `;
export const TranslationsPartsFragmentDoc = gql`
    fragment TranslationsParts on Translations {
  __typename
  language
  nav {
    __typename
    home
    menu
    gallery
    testimonials
    contact
    orderNow
  }
  hero {
    __typename
    title
    subtitle
    viewMenu
  }
  footer {
    __typename
    quickLinks
    contactInfo
    followUs
  }
}
    `;
export const SiteSettingsDocument = gql`
    query siteSettings($relativePath: String!) {
  siteSettings(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        hasReferences
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...SiteSettingsParts
  }
}
    ${SiteSettingsPartsFragmentDoc}`;
export const SiteSettingsConnectionDocument = gql`
    query siteSettingsConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: SiteSettingsFilter) {
  siteSettingsConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            hasReferences
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...SiteSettingsParts
      }
    }
  }
}
    ${SiteSettingsPartsFragmentDoc}`;
export const MenuItemsDocument = gql`
    query menuItems($relativePath: String!) {
  menuItems(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        hasReferences
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...MenuItemsParts
  }
}
    ${MenuItemsPartsFragmentDoc}`;
export const MenuItemsConnectionDocument = gql`
    query menuItemsConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: MenuItemsFilter) {
  menuItemsConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            hasReferences
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...MenuItemsParts
      }
    }
  }
}
    ${MenuItemsPartsFragmentDoc}`;
export const TestimonialsDocument = gql`
    query testimonials($relativePath: String!) {
  testimonials(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        hasReferences
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...TestimonialsParts
  }
}
    ${TestimonialsPartsFragmentDoc}`;
export const TestimonialsConnectionDocument = gql`
    query testimonialsConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: TestimonialsFilter) {
  testimonialsConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            hasReferences
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...TestimonialsParts
      }
    }
  }
}
    ${TestimonialsPartsFragmentDoc}`;
export const GalleryImagesDocument = gql`
    query galleryImages($relativePath: String!) {
  galleryImages(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        hasReferences
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...GalleryImagesParts
  }
}
    ${GalleryImagesPartsFragmentDoc}`;
export const GalleryImagesConnectionDocument = gql`
    query galleryImagesConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: GalleryImagesFilter) {
  galleryImagesConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            hasReferences
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...GalleryImagesParts
      }
    }
  }
}
    ${GalleryImagesPartsFragmentDoc}`;
export const TranslationsDocument = gql`
    query translations($relativePath: String!) {
  translations(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        hasReferences
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...TranslationsParts
  }
}
    ${TranslationsPartsFragmentDoc}`;
export const TranslationsConnectionDocument = gql`
    query translationsConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: TranslationsFilter) {
  translationsConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            hasReferences
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...TranslationsParts
      }
    }
  }
}
    ${TranslationsPartsFragmentDoc}`;
export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
      siteSettings(variables: SiteSettingsQueryVariables, options?: C): Promise<{data: SiteSettingsQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: SiteSettingsQueryVariables, query: string}> {
        return requester<{data: SiteSettingsQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: SiteSettingsQueryVariables, query: string}, SiteSettingsQueryVariables>(SiteSettingsDocument, variables, options);
      },
    siteSettingsConnection(variables?: SiteSettingsConnectionQueryVariables, options?: C): Promise<{data: SiteSettingsConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: SiteSettingsConnectionQueryVariables, query: string}> {
        return requester<{data: SiteSettingsConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: SiteSettingsConnectionQueryVariables, query: string}, SiteSettingsConnectionQueryVariables>(SiteSettingsConnectionDocument, variables, options);
      },
    menuItems(variables: MenuItemsQueryVariables, options?: C): Promise<{data: MenuItemsQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: MenuItemsQueryVariables, query: string}> {
        return requester<{data: MenuItemsQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: MenuItemsQueryVariables, query: string}, MenuItemsQueryVariables>(MenuItemsDocument, variables, options);
      },
    menuItemsConnection(variables?: MenuItemsConnectionQueryVariables, options?: C): Promise<{data: MenuItemsConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: MenuItemsConnectionQueryVariables, query: string}> {
        return requester<{data: MenuItemsConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: MenuItemsConnectionQueryVariables, query: string}, MenuItemsConnectionQueryVariables>(MenuItemsConnectionDocument, variables, options);
      },
    testimonials(variables: TestimonialsQueryVariables, options?: C): Promise<{data: TestimonialsQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: TestimonialsQueryVariables, query: string}> {
        return requester<{data: TestimonialsQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: TestimonialsQueryVariables, query: string}, TestimonialsQueryVariables>(TestimonialsDocument, variables, options);
      },
    testimonialsConnection(variables?: TestimonialsConnectionQueryVariables, options?: C): Promise<{data: TestimonialsConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: TestimonialsConnectionQueryVariables, query: string}> {
        return requester<{data: TestimonialsConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: TestimonialsConnectionQueryVariables, query: string}, TestimonialsConnectionQueryVariables>(TestimonialsConnectionDocument, variables, options);
      },
    galleryImages(variables: GalleryImagesQueryVariables, options?: C): Promise<{data: GalleryImagesQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: GalleryImagesQueryVariables, query: string}> {
        return requester<{data: GalleryImagesQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: GalleryImagesQueryVariables, query: string}, GalleryImagesQueryVariables>(GalleryImagesDocument, variables, options);
      },
    galleryImagesConnection(variables?: GalleryImagesConnectionQueryVariables, options?: C): Promise<{data: GalleryImagesConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: GalleryImagesConnectionQueryVariables, query: string}> {
        return requester<{data: GalleryImagesConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: GalleryImagesConnectionQueryVariables, query: string}, GalleryImagesConnectionQueryVariables>(GalleryImagesConnectionDocument, variables, options);
      },
    translations(variables: TranslationsQueryVariables, options?: C): Promise<{data: TranslationsQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: TranslationsQueryVariables, query: string}> {
        return requester<{data: TranslationsQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: TranslationsQueryVariables, query: string}, TranslationsQueryVariables>(TranslationsDocument, variables, options);
      },
    translationsConnection(variables?: TranslationsConnectionQueryVariables, options?: C): Promise<{data: TranslationsConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: TranslationsConnectionQueryVariables, query: string}> {
        return requester<{data: TranslationsConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: TranslationsConnectionQueryVariables, query: string}, TranslationsConnectionQueryVariables>(TranslationsConnectionDocument, variables, options);
      }
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { createClient, TinaClient } from "tinacms/dist/client";

const generateRequester = (
  client: TinaClient,
) => {
  const requester: (
    doc: any,
    vars?: any,
    options?: {
      branch?: string,
      /**
       * Aside from `method` and `body`, all fetch options are passed
       * through to underlying fetch request
       */
      fetchOptions?: Omit<Parameters<typeof fetch>[1], 'body' | 'method'>,
    },
    client
  ) => Promise<any> = async (doc, vars, options) => {
    let url = client.apiUrl
    if (options?.branch) {
      const index = client.apiUrl.lastIndexOf('/')
      url = client.apiUrl.substring(0, index + 1) + options.branch
    }
    const data = await client.request({
      query: doc,
      variables: vars,
      url,
    }, options)

    return { data: data?.data, errors: data?.errors, query: doc, variables: vars || {} }
  }

  return requester
}

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = () =>
  getSdk(
    generateRequester(
      createClient({
        url: "http://localhost:4001/graphql",
        queries,
      })
    )
  )

export const queries = (
  client: TinaClient,
) => {
  const requester = generateRequester(client)
  return getSdk(requester)
}

  